- if !logged_in? && @station_obj
  - content_for :head do
    %script
      = "station_obj = #{@station_json}"

#content
  -if params[:queue] == "true"
    - queue = "&QUEUE=#{params[:station_id]}"
  
  :javascript
    var could_not_find_artist = "#{t("stations.could_not_find_artist", :artist => "{{artist}}")}";
    
    $(document).ready(function() {
      var artistSearch = $("input[name='station_name']");
      artistSearch.focus(function() {
        if (artistSearch.attr("touched") != 'true') {
          artistSearch.attr("touched", 'true');
          artistSearch.css('color', '#025d8c');
          artistSearch.attr('value', '')
        }
      });

      checkForEnter = function(e) { if ((e.which || e.keyCode) == 13) { e.preventDefault(); return false; } }
      if ($.browser.mozilla) {
        artistSearch.keypress(checkForEnter);
      } else {
        artistSearch.keydown(checkForEnter);
      }
      
      artistSearch.ajaxComplete(function(event, request, settings){
        if (request.responseText == "[]") {
          error_message = '<p class="error">'+could_not_find_artist.replace("{{artist}}", artistSearch[0].value)+'</p>';
          if ( $("#messages").length > 0 ) {
            $("#messages").html(error_message);
          } else {
            html_message  = '<div id="messages">'+error_message+'</div>';
            $(html_message).prependTo("#page_wrapper");          
          }
        } else {
          $("#messages").remove();
        }
      });      

      artistSearch.autocomplete("/stations.js",{
        formatItem: function(item) {
          return item.name;
        },
        mustMatch: false,
        cache: 1,
        matchSubset: false,
        scrollHeight: 200,
        parse: function(data) {
          var rows = new Array();
          for(var i=0; i<data.length; i++){
            rows[i] = { data:data[i], value:data[i].name, result:data[i].name };
          }
          return rows;
        },
        dataType: 'json'
      }).result(function(event, item, formatted) {
        $('#create_station_form form').submit();
      });
    });

  #create_station_form
    - form_for :station, :url => search_radio_path do |f|
      = f.label :artist, t('radio.create_new_station')
      = text_field_tag :station_name, t('home.type_artist_name'), {:class => 'radio_create'}
      = f.submit t("actions.create_station"), :type => :submit, :class => 'submit_button'

  :javascript
    var flashvars = {
      BASEURI:"#{RecEngine::BASE_URI}",
      MARKET:"#{current_site.code}",
      LOGGEDIN:"#{logged_in?}",
      USERID:"#{!current_user.nil? ? current_user.id : nil}",
      QUEUE:"#{params[:station_id]}",
      LOCALE:"#{current_site.default_locale == :es_ES ? 'es' : current_site.default_locale}"
    };
    var params = {wmode:"transparent"};
    var attributes = {id:"radio_engine", name:"radio_engine"};
    swfobject.embedSWF("flash/radio_engine.swf?1", "radio_player", "612", "309", "9", false, flashvars, params, attributes);

  #radio_player

  - cache("#{site_cache_key}/radio/default_artist_info", :expires_in => EXPIRATION_TIMES['radio_default_artist_info']) do
    .artist_radio_info
      = render :partial => "default_artist_info"
#secondary_content
  = banner_ad("square_banner")
  #top_stations
    %h3
      =t 'modules.top_stations.title'
    %ul
      = render :partial => 'shared/abstract_station', :collection => @top_abstract_stations, :locals => { :columns => 1 }
  = banner_ad("pixel_banner")
