- if playlist = playlist_activity
  %li.playlist.activity.clearfix{:timestamp => playlist_activity["timestamp"]}
    .avatar{:onclick => 'do_toggle(this)'}
      = link_to(avatar_for_activity(playlist_activity["owner"]["avatar_file_name"], playlist_activity["owner"]["id"] , playlist_activity["owner"]["gender"], {:alt => playlist_activity["owner"]["name"]}), "/#{playlist_activity["owner"]["slug"]}")
    .item
      %h4= link_to playlist_activity["item"]["name"], "/#{playlist_activity['owner']['slug']}/playlists/#{playlist_activity["item"]['id']}"
      .meta{:onclick => 'do_toggle(this)'}
        == #{t('basics.created_by')} 
        = (logged_in? && current_user.id == playlist_activity["owner"]["id"]) ? t('basics.me') : link_to(truncate(playlist_activity["owner"]["name"], :length => 42), "/#{playlist_activity['owner']['slug']}")
        %span.date_time= t("basics.created_at", :when => distance_of_time_in_words_to_now(Time.at(playlist_activity["timestamp"].to_i)))
        - unless playlist_activity["item"]["artists_contained"].to_s.empty?
          %span.contains
            == #{t('basics.contains')}: 
            = playlist_activity["item"]["artists_contained"].map{ |k| link_to(k["artist"], "/#{k["slug"]}")}.join(", ")
      .tools
        .play
          = link_to '', "/#{playlist_activity['owner']['slug']}/playlists/#{playlist_activity['item']['id']}?autoplay=true", :class => "play", :title => t('actions.play')
